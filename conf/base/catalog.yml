# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://docs.kedro.org/en/stable/data/data_catalog.html
#
# We support interacting with a variety of data stores including local file systems, cloud, network and HDFS
#
# An example data set definition can look as follows:
#
#bikes:
#  type: pandas.CSVDataset
#  filepath: "data/01_raw/bikes.csv"
#
#weather:
#  type: spark.SparkDataset
#  filepath: s3a://your_bucket/data/01_raw/weather*
#  file_format: csv
#  credentials: dev_s3
#  load_args:
#    header: True
#    inferSchema: True
#  save_args:
#    sep: '|'
#    header: True
#
#scooters:
#  type: pandas.SQLTableDataset
#  credentials: scooters_credentials
#  table_name: scooters
#  load_args:
#    index_col: ['name']
#    columns: ['name', 'gear']
#  save_args:
#    if_exists: 'replace'
#    # if_exists: 'fail'
#    # if_exists: 'append'
#
# The Data Catalog supports being able to reference the same file using two different Dataset implementations
# (transcoding), templating and a way to reuse arguments that are frequently repeated. See more here:
# https://docs.kedro.org/en/stable/data/data_catalog.html


patients:
  filepath: data/01_raw/patients.csv
  type: spark.SparkDataset
  file_format: csv
  load_args:
    header: True 
    inferSchema: True 
  save_args:
    sep: ','
    header: True 
    mode: overwrite

symptoms:
  filepath: data/01_raw/symptoms.csv
  type: spark.SparkDataset 
  file_format: csv
  load_args:
    header: True 
    inferschema: True 
  save_args:
    sep: ','
    header: True 
    mode: overwrite

medications:
  filepath: data/01_raw/medications.csv
  type: spark.SparkDataset
  file_format: csv
  load_args:
    header: True 
    inferschema: True 
  save_args:
    sep: ','
    header: True 
    mode: overwrite

patients_gender:
  filepath: data/01_raw/patient_gender.csv
  type: spark.SparkDataset
  file_format: csv
  load_args:
    header: True 
    inferschema: True 
  save_args:
    sep: ','
    header: True 
    mode: overwrite

encounters:
  filepath: data/01_raw/encounters.parquet
  type: spark.SparkDataset
  file_format: parquet
  load_args:
    header: True
    inferSchema: True
  save_args:
    mode: overwrite

conditions_excel:
  type: pandas.ExcelDataset
  filepath: data/01_raw/conditions.xlsx

conditions_csv:
  type: pandas.CSVDataset
  filepath: data/02_intermediate/conditions.csv

conditions_spark:
  filepath: data/02_intermediate/conditions.csv
  type: spark.SparkDataset
  file_format: csv
  load_args:
    header: True
    inferSchema: True
  save_args:
    sep: ','
    header: True
    mode: overwrite


cleaned_patients:
  filepath: data/02_intermediate/cleaned_patients.csv
  type: spark.SparkDataset
  file_format: csv
  load_args:
    header: True 
    inferSchema: True 
  save_args:
    sep: ','
    header: True 
    mode: overwrite

cleaned_symptoms:
  filepath: data/02_intermediate/cleaned_symptoms.csv
  type: spark.SparkDataset
  file_format: csv
  load_args:
    header: True 
    inferSchema: True 
  save_args:
    sep: ','
    header: True 
    mode: overwrite

cleaned_medications:
  filepath: data/02_intermediate/cleaned_medications.csv
  type: spark.SparkDataset
  file_format: csv
  load_args:
    header: True 
    inferSchema: True 
  save_args:
    sep: ','
    header: True 
    mode: overwrite

cleaned_patient_gender:
  filepath: data/02_intermediate/cleaned_patient_gender.csv
  type: spark.SparkDataset
  file_format: csv
  load_args:
    header: True 
    inferSchema: True 
  save_args:
    sep: ','
    header: True 
    mode: overwrite


cleaned_encounters:
  filepath: data/02_intermediate/cleaned_encounters.csv
  type: spark.SparkDataset
  file_format: csv
  load_args:
    header: True 
    inferSchema: True 
  save_args:
    sep: ','
    header: True 
    mode: overwrite

cleaned_conditions:
  filepath: data/02_intermediate/cleaned_conditions.csv
  type: spark.SparkDataset
  file_format: csv
  load_args:
    header: True
    inferSchema: True
  save_args:
    sep: ','
    header: True
    mode: overwrite

model_input_table:
  filepath: data/03_primary/model_input_table.csv
  type: spark.SparkDataset
  file_format: csv
  load_args:
    header: True
    inferSchema: True
  save_args:
    sep: ','
    header: True
    mode: overwrite

